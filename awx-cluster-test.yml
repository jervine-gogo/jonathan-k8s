#- hosts: localhost
#  tasks:
#    - debug: var=inventory_hostname
#    - debug: var=ansible_hostname 
#    - debug: var=ansible_nodename
#    - debug: '{{ ansible_hostname }}'
#    - debug: var=hostvars
#    - set_fact: 
#        target_node: var=ansible_nodename
#    #- debug: "{{ target_node }}"


- hosts:  all
  vars_files:
  - global_vars/main.yml

  tasks:

    - name: printenv 
      command: printenv
      register: penv
    - debug: var=penv.stdout_lines

    - name: cluster info
      command: kubectl cluster-info
      register: cluster
    - debug: var=cluster.stdout_lines


    #- shell: echo "It works"
    #  register: out
#
    #- debug: var=out.stdout_lines
#
    - name: get ns
      command: kubectl get ns
      register: nsout
    - debug: var=nsout.stdout_lines
#
    #- name: get helm list
    #  shell: 'helm list --tiller-namespace app-helm-tiller' 
    #  register: helmout
#
    #- debug: var=helmout.stdout_lines
#

    #- name: Check whether gcloud
    #  command: 'which gcloud && which kubectl' 
    #  register: gcloud_installed
    #  ignore_errors: yes
#
    #- name: Create a tmp path
    #  file:
    #    path: "{{ gcloud_tmp_path }}"
    #    state: directory
    #    mode: 0777
    #  when: gcloud_installed is failed
#
    #- name: Insure temp path exists
    #  file:
    #    path: "{{ gcloud_tmp_path }}"
    #    state: directory
    #  when: gcloud_installed is failed
#
    #- name: Download GCloud
    #  get_url:
    #    url: "{{ gcloud_archive_url }}/{{ gcloud_archive_name }}"
    #    dest: "{{ gcloud_tmp_path }}/{{ gcloud_archive_name }}"
    #    force: yes
    #  when: gcloud_archive_name and gcloud_installed is failed
#
    #- name: Unarchive
    #  shell: "cd {{ gcloud_tmp_path }} && tar xvzf {{ gcloud_tmp_path }}/google-cloud-sdk-*"
    #  when: gcloud_archive_name and gcloud_installed is failed
  #
    #- name: Install GCloud SDK
    #  shell: "sh {{ gcloud_tmp_path }}/google-cloud-sdk/install.sh |  bash && exec -l $SHELL"
    #  register: gcloud_installed_sdk
    #  when: gcloud_installed is failed
    #
    #- name: Install kubectl
    #  shell: "yes | gcloud components install kubectl"
    #  when: gcloud_installed is failed
#
    #- name: Run the install
    #  roles:
    #    - role: role-install-gcloud
    #      gcloud_tmp_path: /tmp/install_gcloud 
    #      gcloud_archive_name: google-cloud-sdk-114.0.0-darwin-x86_64.tar.gz
#
    #- name: Remove the tmp path
    #  file:
    #    path: "/tmp/install_gcloud"
    #    state: absent
